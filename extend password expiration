set serveroutput on
DECLARE
/* Variable declaration*/
user_name  varchar2(20) := '&1';
exp_date dba_users.expiry_date%TYPE;
acct_stats dba_users.account_status%TYPE;
profile_name dba_users.profile%TYPE;
profile_limit_reuse_time_store dba_profiles.LIMIT%TYPE;
profile_limit_reuse_max_store dba_profiles.LIMIT%TYPE;
profile_limit_pass_ver_func dba_profiles.LIMIT%TYPE;
common_profile dba_profiles.common%TYPE;
common_user dba_users.common%TYPE;
common_user_prefix varchar2(5);
container_id number(2);
temp_pdb_profile_count number(2);
temp_pdb_profile_name dba_profiles.profile%TYPE :='TEMP_ONLY';
/*set hashed_pwd to 300 since spare4 hash is larger than previous 20.*/
hashed_pwd  varchar2(300) ;
/* Variable declaration END*/

PROCEDURE create_temp_profile (toggle BOOLEAN) IS
BEGIN
	execute immediate('DROP PROFILE '||temp_pdb_profile_name);
	EXCEPTION
	WHEN OTHERS THEN 
	dbms_output.put_line(sqlerrm);
	IF ( SQLCODE = '-2382' ) THEN
		dbms_output.put_line('To fix this: Please find any user assigned to the profile temp_only and move to other profile. Temp_only only exists in this script''s lifecycle.');
		RAISE_APPLICATION_ERROR(-20001, 'Cant continue. Please check the fix.');
	END IF;
	IF ( SQLCODE = '-2380' ) THEN
		dbms_output.put_line('This error just means the temp profile is not existing. Ignore.');
	END IF;
	IF toggle THEN
		dbms_output.put_line('CREATE PROFILE:'||temp_pdb_profile_name);
		execute immediate('create profile 	'|| temp_pdb_profile_name ||' limit PASSWORD_REUSE_MAX unlimited');
		execute immediate('alter profile 	'|| temp_pdb_profile_name ||' limit PASSWORD_VERIFY_FUNCTION  null');
		execute immediate('alter profile 	'|| temp_pdb_profile_name ||' limit PASSWORD_REUSE_TIME unlimited');
		execute immediate('alter profile 	'|| temp_pdb_profile_name ||' limit PASSWORD_LIFE_TIME unlimited');
		execute immediate('alter profile 	'|| temp_pdb_profile_name ||' limit PASSWORD_REUSE_TIME unlimited');
		execute immediate('alter profile 	'|| temp_pdb_profile_name ||' limit FAILED_LOGIN_ATTEMPTS unlimited');
	END IF;
END;

PROCEDURE alter_user IS
BEGIN
	execute immediate ('alter user '||user_name||' identified by values '''||hashed_pwd||'''');
END;

/* procedure for altering profile. This will be called when 
1. On PDB.
2. Profile is not common. 
*/
PROCEDURE alter_profile (toggle BOOLEAN) IS
BEGIN
	IF toggle THEN
		select LIMIT into profile_limit_reuse_time_store from dba_profiles where resource_name='PASSWORD_REUSE_TIME' and profile=profile_name;
		select LIMIT into profile_limit_reuse_max_store from dba_profiles where resource_name='PASSWORD_REUSE_MAX' and profile=profile_name;
		select LIMIT into profile_limit_pass_ver_func from dba_profiles where resource_name='PASSWORD_VERIFY_FUNCTION' and profile=profile_name;
		dbms_output.put_line('USERNAME: '||user_name);
		dbms_output.put_line('ACCOUNT_STATUS: '||acct_stats);
		dbms_output.put_line('ACCOUNT_EXPIRATION_DATE: '||exp_date);
		dbms_output.put_line('PASSWORD_REUSE_TIME: '||profile_limit_reuse_time_store);
		dbms_output.put_line('PASSWORD_REUSE_MAX: '||profile_limit_reuse_max_store);
		dbms_output.put_line('PASSWORD_VERIFY_FUNCTION: '||profile_limit_pass_ver_func);
		execute immediate ('alter profile '||profile_name||' limit PASSWORD_REUSE_TIME unlimited');
		execute immediate ('alter profile '||profile_name||' limit PASSWORD_REUSE_MAX unlimited');
		execute immediate ('alter profile '||profile_name||' limit PASSWORD_VERIFY_FUNCTION NULL');
	ELSE
		BEGIN
			execute immediate ('alter profile '||profile_name||' limit PASSWORD_REUSE_TIME '||' '||profile_limit_reuse_time_store);
			execute immediate ('alter profile '||profile_name||' limit PASSWORD_REUSE_MAX '||' '||profile_limit_reuse_max_store);
			IF ( profile_limit_pass_ver_func <> 'NULL') THEN
				execute immediate ('alter profile '||profile_name||' limit PASSWORD_VERIFY_FUNCTION '||profile_limit_pass_ver_func);
			END IF;
		EXCEPTION 
		WHEN OTHERS THEN dbms_output.put_line(sqlerrm);
		END;
	END IF;
END;

PROCEDURE display_info IS
BEGIN
	select profile,account_status,expiry_date into profile_name,acct_stats,exp_date from dba_users where username=user_name;
	select LIMIT into profile_limit_reuse_time_store from dba_profiles where resource_name='PASSWORD_REUSE_TIME' and profile=profile_name;
	select LIMIT into profile_limit_reuse_max_store from dba_profiles where resource_name='PASSWORD_REUSE_MAX' and profile=profile_name;
	select LIMIT into profile_limit_pass_ver_func from dba_profiles where resource_name='PASSWORD_VERIFY_FUNCTION' and profile=profile_name;
	dbms_output.put_line('----------------------------------------');
	dbms_output.put_line('USERNAME: '||user_name);
	dbms_output.put_line('ACCOUNT_STATUS: '||acct_stats);
	dbms_output.put_line('PROFILE: '||profile_name);
	dbms_output.put_line('ACCOUNT_EXPIRATION_DATE: '||exp_date);
	dbms_output.put_line('PASSWORD_REUSE_TIME: '||profile_limit_reuse_time_store);
	dbms_output.put_line('PASSWORD_REUSE_MAX: '||profile_limit_reuse_max_store);
	dbms_output.put_line('PASSWORD_VERIFY_FUNCTION: '||profile_limit_pass_ver_func);
END;

/*MAIN*/
BEGIN
	dbms_output.put_line ('RUN AS SYS or any user with access user$ and v$parameter(select_catalog_role)');
	select sys_context('USERENV','CON_ID') into container_id from dual;
	select password into hashed_pwd from user$ where name=user_name;
	select profile,account_status,expiry_date,common into profile_name,acct_stats,exp_date,common_user from dba_users where username=user_name;
	select distinct common into common_profile from dba_profiles where profile=profile_name; 
	select count(*) into temp_pdb_profile_count from dba_profiles where profile=temp_pdb_profile_name; 
	select value into common_user_prefix from v$parameter where name='common_user_prefix'; -- common_user_prefix is blank if this is ran inside a PDB. 
	temp_pdb_profile_name := common_user_prefix||temp_pdb_profile_name;
	/*12cR2 hashed password is in spare4 column*/
	IF hashed_pwd IS NULL THEN
		select SPARE4 into hashed_pwd from user$ where name=user_name;
	END IF;
	/*The common profile inside a PDB can't be altered so in order to loosen the hardness, just create a new profile, which is temp_only. */
	IF ( acct_stats = 'EXPIRED' OR acct_stats = 'EXPIRED(GRACE)' OR acct_stats = 'OPEN'  ) THEN
		display_info;
		IF ( common_profile = 'YES' OR container_id = 1 ) THEN 
			create_temp_profile(TRUE);
			execute immediate ('alter user '|| user_name ||' profile '||temp_pdb_profile_name);
			alter_user;
			execute immediate ('alter user '|| user_name ||' profile '||profile_name);
			create_temp_profile(FALSE);
		ELSIF ( common_profile = 'NO' AND container_id > 1 ) THEN
			BEGIN
				/* To remove expiration,PASSWORD_REUSE_TIME and PASSWORD_REUSE_MAX limit should be temporarily extended and alter to same password. */
				alter_profile(TRUE);
				alter_user;
				alter_profile(FALSE);
			END;
		END IF;
		display_info;
	END IF;
END;

